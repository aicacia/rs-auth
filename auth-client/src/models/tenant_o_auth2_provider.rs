/*
 * auth
 *
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TenantOAuth2Provider {
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "auth_url")]
    pub auth_url: String,
    #[serde(rename = "callback_url")]
    pub callback_url: String,
    #[serde(rename = "client_id")]
    pub client_id: String,
    #[serde(rename = "client_secret")]
    pub client_secret: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "provider")]
    pub provider: String,
    #[serde(rename = "redirect_url")]
    pub redirect_url: String,
    #[serde(rename = "scope")]
    pub scope: String,
    #[serde(rename = "tenant_id")]
    pub tenant_id: i64,
    #[serde(rename = "token_url")]
    pub token_url: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl TenantOAuth2Provider {
    pub fn new(active: bool, auth_url: String, callback_url: String, client_id: String, client_secret: String, created_at: String, id: i64, provider: String, redirect_url: String, scope: String, tenant_id: i64, token_url: String, updated_at: String) -> TenantOAuth2Provider {
        TenantOAuth2Provider {
            active,
            auth_url,
            callback_url,
            client_id,
            client_secret,
            created_at,
            id,
            provider,
            redirect_url,
            scope,
            tenant_id,
            token_url,
            updated_at,
        }
    }
}

