/*
 * auth
 *
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserTotp {
    #[serde(rename = "algorithm")]
    pub algorithm: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "digits")]
    pub digits: i64,
    #[serde(rename = "secret", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub secret: Option<Option<String>>,
    #[serde(rename = "step")]
    pub step: i64,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl UserTotp {
    pub fn new(algorithm: String, created_at: String, digits: i64, step: i64, updated_at: String) -> UserTotp {
        UserTotp {
            algorithm,
            created_at,
            digits,
            secret: None,
            step,
            updated_at,
        }
    }
}

