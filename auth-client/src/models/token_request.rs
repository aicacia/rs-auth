/*
 * auth
 *
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum TokenRequest {
    TokenRequestPassword(models::TokenRequestPassword),
    TokenRequestRefreshToken(models::TokenRequestRefreshToken),
    TokenRequestServiceAccount(models::TokenRequestServiceAccount),
    TokenRequestAuthorizationCode(models::TokenRequestAuthorizationCode),
}

impl Default for TokenRequest {
    fn default() -> Self {
        Self::TokenRequestPassword(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GrantType {
    #[serde(rename = "authorization-code")]
    AuthorizationCode,
}

impl Default for GrantType {
    fn default() -> GrantType {
        Self::AuthorizationCode
    }
}

