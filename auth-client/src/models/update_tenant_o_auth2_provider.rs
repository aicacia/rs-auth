/*
 * auth
 *
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateTenantOAuth2Provider {
    #[serde(rename = "active", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub active: Option<Option<bool>>,
    #[serde(rename = "auth_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub auth_url: Option<Option<String>>,
    #[serde(rename = "callback_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub callback_url: Option<Option<String>>,
    #[serde(rename = "client_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<Option<String>>,
    #[serde(rename = "client_secret", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub client_secret: Option<Option<String>>,
    #[serde(rename = "redirect_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub redirect_url: Option<Option<String>>,
    #[serde(rename = "scope", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub scope: Option<Option<String>>,
    #[serde(rename = "token_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub token_url: Option<Option<String>>,
}

impl UpdateTenantOAuth2Provider {
    pub fn new() -> UpdateTenantOAuth2Provider {
        UpdateTenantOAuth2Provider {
            active: None,
            auth_url: None,
            callback_url: None,
            client_id: None,
            client_secret: None,
            redirect_url: None,
            scope: None,
            token_url: None,
        }
    }
}

