/*
 * auth
 *
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateServiceAccount {
    #[serde(rename = "client_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<Option<uuid::Uuid>>,
    #[serde(rename = "client_secret", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub client_secret: Option<Option<uuid::Uuid>>,
    #[serde(rename = "name")]
    pub name: String,
}

impl CreateServiceAccount {
    pub fn new(name: String) -> CreateServiceAccount {
        CreateServiceAccount {
            client_id: None,
            client_secret: None,
            name,
        }
    }
}

