/*
 * auth
 *
 * Aicacia Auth API provides authentication services for applications.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserOAuth2Provider {
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub email: Option<Option<String>>,
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "tenant_oauth2_provider_id")]
    pub tenant_oauth2_provider_id: i64,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl UserOAuth2Provider {
    pub fn new(created_at: String, id: i64, tenant_oauth2_provider_id: i64, updated_at: String) -> UserOAuth2Provider {
        UserOAuth2Provider {
            created_at,
            email: None,
            id,
            tenant_oauth2_provider_id,
            updated_at,
        }
    }
}

